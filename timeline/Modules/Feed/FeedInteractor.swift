//
//  FeedInteractor.swift
//  timeline
//
//  Created by pattarapol sawasdee on 12/10/2562 BE.
//  Copyright (c) 2562 pattarapol. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FeedBusinessLogic
{
  func getAlbums(request: Feed.AlbumFeed.Request)
  func getPhoto(request: Feed.Photo.Request)
}

protocol FeedDataStore
{
  var albums: Albums? { get set }
}

class FeedInteractor: FeedBusinessLogic, FeedDataStore
{

  var presenter: FeedPresentationLogic?
  var worker: FeedWorker?
  var albums: Albums?
//  var name: String = ""
  
  // MARK: Do something

  func getAlbums(request: Feed.AlbumFeed.Request) {
    worker = FeedWorker()
    worker?.getAlbums(success: { data in
      self.albums = data
      let response = Feed.AlbumFeed.Response(albums: data)
      self.presenter?.presentFeed(response: response)
    }, error: { _ in
      // TODO : handle error
    })
  }

  func getPhoto(request: Feed.Photo.Request) {
    worker = FeedWorker()
    worker?.getPhoto(albumId: request.id, success: { data in
      let response = Feed.Photo.Response(id: request.id, photo: data, indexPath: request.indexPath)
      self.presenter?.presentPhoto(response: response)
    }, error: { _ in
      // TODO : handle error
    })
  }
}
