//
//  PostViewController.swift
//  timeline
//
//  Created by pattarapol sawasdee on 13/10/2562 BE.
//  Copyright (c) 2562 pattarapol. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Kingfisher

protocol PostDisplayLogic: class
{
  func displayPost(viewModel: Post.Post.ViewModel)
  func displayFullImage(viewModel: Post.FullImage.ViewModel)
}

class PostViewController: UIViewController, PostDisplayLogic
{
  var interactor: PostBusinessLogic?
  var router: (NSObjectProtocol & PostRoutingLogic & PostDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = PostInteractor()
    let presenter = PostPresenter()
    let router = PostRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    getPost()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  @IBOutlet var timeLabel: UILabel!
  @IBOutlet var titleLabel: UILabel!
  @IBOutlet var image1: UIImageView!
  @IBOutlet var image2: UIImageView!
  @IBOutlet var image3: UIImageView!
  @IBOutlet var imageFullVIew: UIView!
  @IBOutlet var imageFull: UIImageView!

  @IBAction func imageTab1(_ sender: Any) {
    showFullImage(index: 0)
  }
  
  @IBAction func imageTab2(_ sender: Any) {
    showFullImage(index: 1)
  }

  @IBAction func imageTab3(_ sender: Any) {
    showFullImage(index: 2)
  }

  @IBAction func closeFullImage(_ sender: Any) {
    imageFullVIew.isHidden = true
  }

  func getPost()
  {
    let request = Post.Post.Request()
    interactor?.getPost(request: request)
  }

  func showFullImage(index: Int) {
    let request = Post.FullImage.Request(index: index)
    interactor?.getFullImage(request: request)
  }
  
  fileprivate func setImage(view: UIImageView, viewModel: Post.Post.ViewModel, index: Int) {
    if let photo = viewModel.photoList[safe: index] {
      view.kf.setImage(with: URL(string: photo))
    } else {
      view.isHidden = true
    }
  }

  func displayPost(viewModel: Post.Post.ViewModel)
  {
    titleLabel.text = viewModel.title
    setImage(view: image1,viewModel: viewModel, index: 0)
    setImage(view: image2,viewModel: viewModel, index: 1)
    setImage(view: image3,viewModel: viewModel, index: 2)
  }

  func displayFullImage(viewModel: Post.FullImage.ViewModel) {
    imageFull.kf.setImage(with: URL(string: viewModel.imageUrl))
    imageFullVIew.isHidden = false
  }

}
